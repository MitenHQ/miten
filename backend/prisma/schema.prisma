// learn more about prisma schema in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = "postgresql://admin:example@localhost:5432/miten?schema=public"
}

generator client {
  provider = "prisma-client-js"
}

model FeedbackBase {
  id                String             @id @default(uuid())
  title             String?
  feedbackUid       String             @unique
  reportUid         String             @unique
  user              User               @relation(fields: [userId], references: [id])
  userId            String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now()) @updatedAt
  feedbackResponses FeedbackResponse[]
}

model FeedbackResponse {
  id             String       @id @default(uuid())
  rating         Int
  items          String[]
  comment        String
  feedbackBase   FeedbackBase @relation(fields: [feedbackBaseId], references: [id])
  feedbackBaseId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  name          String?
  password      String?
  feedbackBases FeedbackBase[]
  permissions   String[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt
  Token         Token[]
}

enum TOKEN_TYPES {
  RESET_PASSWORD
}

model Token {
  id        String      @id @default(uuid())
  user      User        @relation(fields: [email], references: [email])
  email     String
  token     String
  type      TOKEN_TYPES
  resolved  Boolean     @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
}

model LoginFailedAttempt {
  id        String   @id @default(uuid())
  email     String
  resolved  Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
