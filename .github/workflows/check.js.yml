# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# For now we just check typescript, later we can also run the tests
name: Check typescript

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  check-root:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm audit

  check-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run ts
      - run: npm audit
      - name: Start PostgreSQL
        run: |
          sudo systemctl start postgresql.service
          pg_isready
      - name: Create PostgreSQL user
        run: |
          sudo -u postgres psql --command="CREATE USER admin PASSWORD 'example' CREATEDB" --command="\du"
      - run: cp ./.env.sample ./.env
      - run: npm run test:ci

  check-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run ts
      - run: npm audit
